"use strict";var security=angular.module("security",["security.events","security.roles","security.storage","security.interceptor","security.service","ui.router"]);security.config(["$httpProvider","$stateProvider",function(a,b){b.state("login",{url:"/login",templateUrl:"common/security/login.html",controller:"LoginController"}).state("logout",{url:"/logout",controller:"LogoutController"}).state("accessForbidden",{url:"/accessForbidden",templateUrl:"common/security/403.html"})}]).run(["$state","$rootScope","$location","AUTH_EVENTS","Session","Auth",function(a,b,c,d,e,f){delete b.originalPath,b.$on("$stateChangeStart",function(d,e){var g=e.access;f.permitAll(g)||(f.isNotAuthenticated()?(d.preventDefault(),b.originalPath=c.path(),a.go("login")):f.hasRole(g)||(d.preventDefault(),a.go("accessForbidden")))}),b.$on(d.notAuthenticated,function(){a.go("login")}),b.$on(d.notAuthorized,function(){a.go("accessForbidden")})}]),angular.module("security.events",[]).constant("AUTH_EVENTS",{notAuthenticated:"notAuthenticated",notAuthorized:"notAuthorized"}),angular.module("security.roles",[]).constant("ROLE",{admin:"ROLE_ADMIN",user:"ROLE_USER"}),angular.module("security.service",["security.storage"]).factory("Auth",["Session",function(a){var b={};return b.permitAll=function(a){return!angular.isDefined(a)},b.isAuthenticated=function(){return null!==a.user()},b.isNotAuthenticated=function(){return!b.isAuthenticated()},b.hasRole=function(b){var c=a.user();if(null===c)return!1;var d=!1;return angular.forEach(c.roles,function(a){b===a&&(d=!0)}),d},b.currentUser=function(){return a.user()},b}]),angular.module("security.interceptor",["security.events","security.storage"]).factory("securityInterceptor",["$rootScope","$q","Session","AUTH_EVENTS","TOKEN_KEY",function(a,b,c,d,e){var f={request:function(a){var b=c.authToken();return b&&(a.headers[e]=b),a},responseError:function(c){var e=c.status;return 401==e?a.$broadcast(d.notAuthenticated,c):403==e&&a.$broadcast(d.notAuthorized,c),b.reject(c)}};return f}]).config(["$httpProvider",function(a){a.interceptors.push("securityInterceptor")}]),angular.module("security.storage",["LocalStorageModule"]).constant("TOKEN_KEY","x-auth-token").constant("USER_KEY","user").constant("STORAGE_PREFIX","cc-app").config(["localStorageServiceProvider","STORAGE_PREFIX",function(a,b){a.setPrefix(b),a.setStorageType("sessionStorage")}]).factory("Session",["localStorageService","TOKEN_KEY","USER_KEY",function(a,b,c){var d=b,e=c;return{create:function(b){a.set(d,b.token),a.set(e,b)},user:function(){return a.get(e)},authToken:function(){return a.get(d)},invalidate:function(){a.remove(d),a.remove(e)}}}]),angular.module("security").controller("LoginController",["$http","$scope","$rootScope","$location","$state","$stateParams","AuthResource","Session",function(a,b,c,d,e,f,g,h){function i(){c.originalPath?(d.path(c.originalPath),delete c.originalPath):e.go("global.dashboard")}b.login=function(a,c){var d=$.param({username:a,password:c});g.authenticate(d).$promise.then(function(a){b.$parent.currentUser=a,h.create(a),i()})["catch"](function(){b.authenticationError=!0,b.tokenExpired=!1,h.invalidate()})},b.tokenExpired=null!==h.user()}]).factory("AuthResource",["$resource",function(a){return a(":action",{},{authenticate:{method:"POST",params:{action:"authenticate"},headers:{"Content-Type":"application/x-www-form-urlencoded"}}})}]),angular.module("security").controller("LogoutController",["$state","Session",function(a,b){b.invalidate(),a.go("login")}]);