/**
 * Angular token security module based on ui-router and local-storage
 * @version v0.1.2 - 2015-03-21
 * @link https://github.com/pmackowski/angular-cc-token-security
 * @author pmackowski <pmackowski@coffeecode.pl>
 * @license MIT License, http://www.opensource.org/licenses/MIT
 */!function(a,b){"use strict";var c=b.module("ccTokenSecurity",["ccTokenSecurity.events","ccTokenSecurity.storage","ccTokenSecurity.interceptor","ccTokenSecurity.service","ccTokenSecurity.provider","ngResource","ui.router"]);c.run(["$state","$rootScope","$location","AUTH_EVENTS","Auth","ccTokenSecurity",function(a,b,c,d,e,f){var g=f.getLogin(),h=f.getAccessForbidden();delete b.originalPath,b.$on("$stateChangeStart",function(d,f){var i=f.access,j=f.state;e.permitAll(j,i)||(e.isNotAuthenticated()?(d.preventDefault(),b.originalPath=c.path(),a.go(g.state)):e.hasRole(i)||(d.preventDefault(),a.go(h.state)))}),b.$on(d.notAuthenticated,function(){a.go(g.state)}),b.$on(d.notAuthorized,function(){a.go(h.state)})}]),b.module("ccTokenSecurity.events",[]).constant("AUTH_EVENTS",{notAuthenticated:"notAuthenticated",notAuthorized:"notAuthorized"}),b.module("ccTokenSecurity.service",["ccTokenSecurity.storage","ccTokenSecurity.provider","ngResource","ui.router"]).factory("Auth",["Session","ccTokenSecurity","$state","$rootScope","$location",function(a,c,d,e,f){var g={};return g.permitAll=function(a,d){var e=c.getLogin(),f=c.getLogout(),g=c.getAccessForbidden();if(e.state===a||f.state===a||g.state===a)return!0;var h=c.isAuthenticationRequired();return!h&&!b.isDefined(d)},g.isAuthenticated=function(){return null!==a.user()},g.isNotAuthenticated=function(){return!g.isAuthenticated()},g.hasRole=function(c){if(!c)return!0;var d=a.user();if(null===d)return!1;var e=!1;return b.forEach(d.roles,function(a){c===a&&(e=!0)}),e},g.currentUser=function(){return a.user()},g.login=function(b){a.create(b);var g=c.getLogin();g.originalPath&&e.originalPath?(f.path(e.originalPath),delete e.originalPath):d.go(g.nextState)},g.logout=function(){var b=c.getLogout();a.invalidate(),d.go(b.nextState)},g.invalidateSession=function(){a.invalidate()},g}]),b.module("ccTokenSecurity.interceptor",["ccTokenSecurity.events","ccTokenSecurity.storage","ccTokenSecurity.provider"]).factory("securityInterceptor",["$rootScope","$q","Session","AUTH_EVENTS","ccTokenSecurity",function(a,b,c,d,e){var f={request:function(a){var b=c.authToken(),d=e.getTokenKey();return b&&(a.headers[d]=b),a},responseError:function(c){var e=c.status;return 401==e?a.$broadcast(d.notAuthenticated,c):403==e&&a.$broadcast(d.notAuthorized,c),b.reject(c)}};return f}]).config(["$httpProvider",function(a){a.interceptors.push("securityInterceptor")}]),b.module("ccTokenSecurity.storage",["LocalStorageModule","ccTokenSecurity.provider"]).factory("Session",["localStorageService","ccTokenSecurity",function(a,b){var c=b.getTokenKey(),d=b.getUserKey();return{create:function(b){a.set(c,b.token),a.set(d,b)},user:function(){return a.get(d)},authToken:function(){return a.get(c)},invalidate:function(){a.remove(c),a.remove(d)}}}]),b.module("ccTokenSecurity.provider",["ui.router"]).provider("ccTokenSecurity",function(a){function c(c,d){b.extend(c,d),a.state(c.state,c)}var d="x-auth-token",e="user",f=!1,g={state:"login",url:"/login",templateUrl:"views/login.html",controller:"LoginController",nextState:"main",originalPath:!0,authenticateUrl:"authenticate?username={{ username }}&password={{ password }}",onInit:function(){},onLoginSuccess:function(){},onLoginError:function(){}},h={state:"logout",url:"/logout",controller:"LogoutController",nextState:"login"},i={state:"accessForbidden",url:"/accessForbidden"};this.setTokenKey=function(a){d=a},this.setUserKey=function(a){e=a},this.requiresAuthentication=function(){f=!0},this.login=function(a){c(g,a)},this.logout=function(a){c(h,a)},this.accessForbidden=function(a){c(i,a)},this.$get=function(){return{getTokenKey:function(){return d},getUserKey:function(){return e},isAuthenticationRequired:function(){return f},getLogin:function(){return g},getLogout:function(){return h},getAccessForbidden:function(){return i}}}}),b.module("ccTokenSecurity").controller("LoginController",["$http","$scope","Auth","ccTokenSecurity",function(a,b,c,d){var e=d.getLogin();e.onInit(b,c),b.login=function(d,f){var g=/{{\s*username\s*}}/,h=/{{\s*password\s*}}/,i=e.authenticateUrl.replace(g,d).replace(h,f);a.post(i).success(function(a){c.login(a),e.onLoginSuccess(b,a)}).error(function(){c.invalidateSession(),e.onLoginError(b)})}}]),b.module("ccTokenSecurity").controller("LogoutController",["$scope","$http","Auth","ccTokenSecurity",function(a,b,c,d){var e=d.getLogout();e.logoutUrl?b.get(e.logoutUrl).success(function(){}).error(function(){})["finally"](function(){c.logout()}):c.logout()}])}(window,window.angular);